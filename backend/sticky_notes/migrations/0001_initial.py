# Generated by Django 5.2.5 on 2025-10-05 10:35

import django.db.models.deletion
import sticky_notes.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0002_alter_user_status'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='태그명')),
                ('color', models.CharField(blank=True, max_length=20, null=True, verbose_name='태그 색상')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성시각')),
            ],
            options={
                'verbose_name': '태그',
                'verbose_name_plural': '태그 목록',
                'db_table': 'tags',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='StickyNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note_uid', models.CharField(default=sticky_notes.models.generate_ulid, max_length=26, unique=True, verbose_name='메모 UID')),
                ('content', models.TextField(verbose_name='메모 내용')),
                ('importance', models.CharField(choices=[('low', '낮음'), ('medium', '중간'), ('high', '높음')], default='medium', max_length=10, verbose_name='중요도')),
                ('color', models.CharField(choices=[('yellow', '노란색'), ('blue', '파란색'), ('pink', '분홍색'), ('green', '초록색'), ('purple', '보라색'), ('gray', '회색')], default='yellow', max_length=20, verbose_name='색상')),
                ('x', models.FloatField(default=0, verbose_name='X좌표')),
                ('y', models.FloatField(default=0, verbose_name='Y좌표')),
                ('width', models.FloatField(default=220, verbose_name='너비')),
                ('height', models.FloatField(default=160, verbose_name='높이')),
                ('z_index', models.IntegerField(default=1, verbose_name='쌓임 순서')),
                ('is_locked', models.BooleanField(default=False, verbose_name='잠금 여부')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성시각')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='수정시각')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sticky_notes', to='accounts.user', verbose_name='작성자')),
            ],
            options={
                'verbose_name': '포스트잇',
                'verbose_name_plural': '포스트잇 목록',
                'db_table': 'sticky_notes',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='NoteTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sticky_notes.stickynote', verbose_name='메모')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sticky_notes.tag', verbose_name='태그')),
            ],
            options={
                'verbose_name': '메모-태그 매핑',
                'verbose_name_plural': '메모-태그 매핑 목록',
                'db_table': 'note_tags',
            },
        ),
        migrations.AddField(
            model_name='stickynote',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='sticky_notes', through='sticky_notes.NoteTag', to='sticky_notes.tag', verbose_name='태그'),
        ),
        migrations.AddIndex(
            model_name='stickynote',
            index=models.Index(fields=['author'], name='idx_notes_author'),
        ),
        migrations.AddIndex(
            model_name='stickynote',
            index=models.Index(fields=['importance'], name='idx_notes_importance'),
        ),
        migrations.AddIndex(
            model_name='stickynote',
            index=models.Index(fields=['created_at'], name='idx_notes_created'),
        ),
        migrations.AddIndex(
            model_name='stickynote',
            index=models.Index(fields=['x', 'y'], name='idx_notes_pos'),
        ),
        migrations.AddConstraint(
            model_name='notetag',
            constraint=models.UniqueConstraint(fields=('note', 'tag'), name='unique_note_tag'),
        ),
    ]
